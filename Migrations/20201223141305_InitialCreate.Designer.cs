// <auto-generated />
using System;
using FuncionariosAPI.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FuncionariosAPI.Migrations
{
    [DbContext(typeof(SqlContext))]
    [Migration("20201223141305_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("FuncionariosAPI.Domain.Entities.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("GerenteId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GerenteId");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("FuncionariosAPI.Domain.Entities.Funcionario", b =>
                {
                    b.HasOne("FuncionariosAPI.Domain.Entities.Funcionario", "Gerente")
                        .WithMany("Subordinados")
                        .HasForeignKey("GerenteId");

                    b.Navigation("Gerente");
                });

            modelBuilder.Entity("FuncionariosAPI.Domain.Entities.Funcionario", b =>
                {
                    b.Navigation("Subordinados");
                });
#pragma warning restore 612, 618
        }
    }
}
